// This file is automatically generated by Views and will be overwritten
// when the morpher runs. If you want to contribute to how it's generated, eg,
// improving the algorithms inside, etc, see this:
// https://github.com/viewstools/morph/blob/master/ensure-is-media.js

// based on https://github.com/streamich/use-media
import { useState, useEffect } from 'react'

let MOCK_MEDIA_QUERY_LIST = {
  media: '',
  matches: false,
  addListener: () => {},
  removeListener: () => {},
}

function matchMedia(query) {
  if (typeof window === 'undefined') return MOCK_MEDIA_QUERY_LIST
  return window.matchMedia(query)
}

function useMedia(query, defaultState = Boolean(matchMedia(query).matches)) {
  let [state, setState] = useState(defaultState)

  useEffect(() => {
    let cancel = true
    let mediaQueryList = matchMedia(query)

    let onChange = () => {
      if (!cancel) return
      setState(Boolean(mediaQueryList.matches))
    }

    mediaQueryList.addListener(onChange)
    setState(Boolean(mediaQueryList.matches))

    return () => {
      cancel = false
      mediaQueryList.removeListener(onChange)
    }
  }, [query])

  return state
}

export default function useIsMedia() {
  return {
    mobile: useMedia('(min-width: 0px) and (max-width: 424px)'),
    tablet: useMedia('(min-width: 425px) and (max-width: 1024px)'),
    laptop: useMedia('(min-width: 1025px) and (max-width: 1280px)'),
    desktop: useMedia('(min-width: 1281px)'),
  }
}
